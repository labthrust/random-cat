name: Docker Build and Push

on:
  push:
    # vから始まるタグが作成された時にワークフローを実行 (プロダクション環境へのデプロイ)
    tags:
      - v*
  pull_request:
    # mainブランチへのプルリクエスト時にワークフローを実行 (プレビュー環境へのデプロイ)
    branches:
      - main

env:
  REGISTRY: ghcr.io
  # GitHub リポジトリ名をそのままイメージ名として使用する設定
  IMAGE_NAME: ${{ github.repository }}
  # 環境変数ENVIRONMENTを設定
  # 条件:
  # 1. イベントタイプが'push'である
  # 2. タグが'v'で始まる（refs/tags/vで始まるref）
  # これらの条件をすべて満たす場合は'production'、それ以外は'preview'
  ENVIRONMENT: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') && 'production' || 'preview' }}

jobs:
  build:
    runs-on: ubuntu-latest

    # 追加で必要となる権限
    permissions:
      contents: write # リポジトリのコードを読み取る、コミットにコメントを書き込む
      packages: write # GitHub Container Registry にイメージをプッシュする
      pull-requests: write # プルリクエストにコメントを書き込む

    steps:
      # TODO: タグがmainブランチに対するものかを確認し、もしそうでない場合はbuildやpushのステップをスキップするようする

      # リポジトリのコードをチェックアウト
      - name: Checkout repository
        uses: actions/checkout@v4

      # デバッグ: 環境変数の判定をチェック
      - name: Debug environment variable
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "Base ref: ${{ github.event.base_ref }}"
          echo "Calculated ENVIRONMENT: ${{ env.ENVIRONMENT }}"

      # GitHub変数をダンプ
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      # Docker Buildxをセットアップ
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      # コンテナーレジストリーにログイン
      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Dockerイメージのメタデータを抽出
      - name: Extract Docker metadata
        uses: docker/metadata-action@v5
        # 後続のステップで使用するためにIDを設定
        id: meta
        with:
          # イメージ名の設定
          # プロダクション環境とプレビュー環境でレジストリーのリポジトリを分ける設定になっている
          images: |
            name=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-production,enable=${{ env.ENVIRONMENT == 'production' }}
            name=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-preview,enable=${{ env.ENVIRONMENT == 'preview' }}
          # タグルールを設定
          tags: |
            # セマンティックバージョンのタグがgit pushされたときはそのタグに基づきイメージのタグを生成する (プロダクション環境用)
            type=semver,pattern={{version}}
            # プルリクエストが作成されたとき、または、プルリクエストに追加のpushがあったとき、プルリクエスト番号をタグに使用する (プレビュー環境用)
            type=ref,event=pr

      # Dockerイメージをビルドしてプッシュ
      - name: Build and push Docker images
        uses: docker/build-push-action@v6
        with:
          # イメージをレジストリにプッシュ（true に設定）
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          # GitHubActionsのキャッシュを使用してビルドを高速化
          cache-from: type=gha
          # ビルドキャッシュを保存
          cache-to: type=gha,mode=max
          # マルチプラットフォーム向けにビルド
          platforms: linux/amd64,linux/arm64

      # コメント内容を生成
      - name: Generate comment content
        id: comment
        run: |
          COMMENT_BODY="**🐳 Docker images built and pushed to GitHub Container Registry**

          <details>
          <summary>🏷️ View image tags and details</summary>

          **Available Image Tags**
          \`\`\`
          ${{ steps.meta.outputs.tags }}
          \`\`\`

          **Tag Explanations**
          - \`pr-X\`: Tag for this pull request
          - \`on-YYYYMMDD-HHMMSS\`: Build timestamp
          - \`sha-XXXXXXX\`: Short commit SHA
          - \`sha-XXXXXXX...\`: Full commit SHA

          **Tips**
          To use these images, pull your desired tag using the \`docker pull\` command with the full image path from the list above.

          </details>"
          echo "body<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMENT_BODY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # コミットにコメントを追加
      - name: Add comment to commit
        uses: peter-evans/commit-comment@v3
        with:
          body: ${{ steps.comment.outputs.body }}

      # プルリクエスト時にコメントを追加
      - name: Add comment to pull request (if applicable)
        if: github.event_name == 'pull_request'
        uses: thollander/actions-comment-pull-request@v2
        with:
          comment_tag: image_tags
          message: ${{ steps.comment.outputs.body }}
